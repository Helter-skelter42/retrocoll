<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>    
  	<groupId>com.retrocoll.server</groupId>
  	<artifactId>serverBackEnd</artifactId>
  	<packaging>jar</packaging>
  	<version>1.0-SNAPSHOT</version>
  	<name>serverBackEnd JPA2 specification and implementation</name>

    <dependencies>
        <!-- JDBC driver --> 
	    <!-- 
		if driver is not on a maven repository 
		download it manually and run the following command	   
		mvn install:install-file -Dfile=mysql-connector-java.jar -Dpackaging=jar -DgroupId=mysql -DartifactId=mysql-connector-java -Dversion=5.0.5
		
		remark:
		this command assumes that your jar name is the same as your groupId name
		-->
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>5.0.5</version>        
        </dependency>    

        <!-- junit -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.8.1</version>
            <scope>test</scope>
        </dependency>
     
	    <!-- Logging -->
        <!-- remove the real commons-logging from classpath -->
        <!-- declare as provided or exclude from spring jars -->
        <dependency>
            <artifactId>commons-logging</artifactId>
            <groupId>commons-logging</groupId>
            <version>1.0</version>
            <scope>provided</scope>
        </dependency>
        
        <!-- add slf4j interfaces to classpath -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>1.6.4</version>
            <scope>compile</scope>
        </dependency>
        
        <!-- add commons logging to slf4j bridge to classpath --> 
        <!-- acts as jcl but routes commons-logging calls to slf4j -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jcl-over-slf4j</artifactId>
            <version>1.6.4</version>
            <scope>runtime</scope>
        </dependency>
        
        <!-- add log4j binding to classpath -->
        <!-- routes slf4j calls to log4j -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
            <version>1.6.4</version>
            <scope>runtime</scope>
        </dependency>
        
        <!-- add log4j to classpath -->
        <!-- does the logging -->
        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <version>1.2.16</version>
        </dependency>
        	     
        <!-- rest jackson -->
        
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>2.6.1</version>
            <scope>compile</scope>
        </dependency>
		<!-- JPA2 provider hibernate -->
	    <dependency>
	      <groupId>org.hibernate</groupId>
	      <artifactId>hibernate-entitymanager</artifactId>
	      <version>${hibernateVersion}</version>
	    </dependency>
		
		<dependency>
		    <groupId>org.hibernate</groupId>
		    <artifactId>hibernate-validator</artifactId>
		    <version>${hibernateValidatorVersion}</version>
		    <scope>runtime</scope>
		</dependency>
		
		<dependency>
		    <groupId>javax.validation</groupId>
		    <artifactId>validation-api</artifactId>
		    <version>1.0.0.GA</version>
		    <scope>compile</scope>
		</dependency>

 
		<!-- caching -->

        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-ehcache</artifactId>
            <version>${hibernateVersion}</version>
        </dependency>
	    <!-- querydsl integration -->
        <dependency>
          <groupId>com.mysema.querydsl</groupId>
          <artifactId>querydsl-apt</artifactId>
          <version>${querydsl.version}</version>
          <scope>provided</scope>
        </dependency>    
    
        <dependency>
          <groupId>com.mysema.querydsl</groupId>
          <artifactId>querydsl-jpa</artifactId>
          <version>${querydsl.version}</version>
          <exclusions>
              <exclusion>
                  <artifactId>hibernate-jpa-2.0-api</artifactId>
                  <groupId>org.hibernate.javax.persistence</groupId>
              </exclusion>
          </exclusions>          
        </dependency>
        <dependency>
          <groupId>org.mod4j.org.apache.commons</groupId>
          <artifactId>lang</artifactId>
          <version>2.1.0</version>
          <type>jar</type>
          <scope>compile</scope>
        </dependency>        
    
    	<dependency>
    	  <groupId>commons-beanutils</groupId>
    	  <artifactId>commons-beanutils</artifactId>
    	  <version>1.8.3</version>
    	</dependency>
    	
        <dependency>
          <groupId>net.sf.minuteproject</groupId>
          <artifactId>mp-bsla-jpa</artifactId>
          <version>0.8.11</version>
          <exclusions>          
              <exclusion>
                  <artifactId>hibernate-jpa-2.0-api</artifactId>
                  <groupId>org.hibernate.javax.persistence</groupId>
              </exclusion>          
          </exclusions>
        </dependency>	
    </dependencies>
    
    <!-- properties -->
	<properties>
      <querydsl.version>2.1.2</querydsl.version>
      <hibernateVersion>4.3.11.Final</hibernateVersion>
      <hibernateValidatorVersion>4.3.2.Final</hibernateValidatorVersion>
      
    </properties>
    <build>
        <!--<finalName>serverBackEnd</finalName>-->
        <resources>
          <!-- overwrite generated artifacts for packaging: for example by providing another jndi name ... -->
    	  <resource>
    		<directory>src-overwritten/main/resources</directory>
            <excludes>
              <exclude>**/*.java</exclude>
            </excludes>
    	  </resource>    
    	  <resource>
    		<directory>src/main/resources</directory>
            <excludes>
              <exclude>**/*.java</exclude>
            </excludes>
    	  </resource>
    	</resources> 		
        <plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.3</version>
					<configuration>
						<source>1.8</source>
						<target>1.8</target>
					</configuration>
				</plugin>
            <!-- querydsl integration -->
            <plugin>
				<groupId>com.mysema.maven</groupId>
			    <artifactId>apt-maven-plugin</artifactId>
			    <version>1.0.5</version>
			    <executions>
			        <execution>
			            <goals>
			                <goal>process</goal>
			            </goals>
			            <configuration>
			                <outputDirectory>target/generated-sources/java</outputDirectory>
			                <processor>com.mysema.query.apt.jpa.JPAAnnotationProcessor</processor>
			            </configuration>
			        </execution>
			     </executions>
		        <dependencies>
		            <dependency>
		                <groupId>com.mysema.querydsl</groupId>
		                <artifactId>querydsl-apt</artifactId>
		                <version>${querydsl.version}</version>
		            </dependency>
		            <dependency>
		                <groupId>com.mysema.querydsl</groupId>
		                <artifactId>querydsl-jpa</artifactId>
		                <classifier>apt</classifier>
		                <version>${querydsl.version}</version>
		            </dependency>
		        </dependencies>
            </plugin>
             
			<plugin>
			    <groupId>org.codehaus.mojo</groupId>
			    <artifactId>build-helper-maven-plugin</artifactId>
			    <version>1.3</version>
			    <executions>
			        <execution>
			            <id>add-source</id>
			            <phase>generate-sources</phase>
			            <goals>
			                <goal>add-source</goal>
			            </goals>
			            <configuration>
			                <sources>
			                    <source>target/generated-sources/java</source>
			                </sources>
			            </configuration>
			        </execution>
			    </executions>
			</plugin> 
        </plugins>
    </build>
    <repositories>
       <repository>
         <id>sonatype-repo</id>
         <name>Sonatype repository</name>
         <url>https://oss.sonatype.org/content/repositories/releases</url>
       </repository>
    </repositories>   
</project><!--
	 Copyright (c) minuteproject, minuteproject@gmail.com
	 All rights reserved.
	 
	 Licensed under the Apache License, Version 2.0 (the "License")
	 you may not use this file except in compliance with the License.
	 You may obtain a copy of the License at
	 
	 http://www.apache.org/licenses/LICENSE-2.0
	 
	 Unless required by applicable law or agreed to in writing, software
	 distributed under the License is distributed on an "AS IS" BASIS,
	 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 See the License for the specific language governing permissions and
	 limitations under the License.
	 
	 More information on minuteproject:
	 twitter @minuteproject
	 wiki http://minuteproject.wikispaces.com 
	 blog http://minuteproject.blogspot.net
	 
-->
<!--
	 template reference : 
	 - Minuteproject version : 0.9.10
	 - name      : PomXml.JPA2
	 - file name : PomXml.JPA2.vm
	 - time      : 2017/09/16 ap. J.-C. at 19:38:22 CEST
-->
